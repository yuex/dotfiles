# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# oh-my-zsh Options "{{{
# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Uncomment this to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
DISABLE_UNTRACKED_FILES_DIRTY="false"
# "}}}

_ZSHRC_PRIVATE=$HOME/.zshrc-private
[ -r "${_ZSHRC_PRIVATE}" ] && source "${_ZSHRC_PRIVATE}"

if [ -x "$(command -v dircolors)" ]; then
    DIRCOLORS_SOLARIZED=~/.dircolors-solarized/dircolors.ansi-dark
    [ -f ${DIRCOLORS_SOLARIZED} ] && eval `dircolors ${DIRCOLORS_SOLARIZED}`
fi

source $ZSH/oh-my-zsh.sh

export TERM='xterm-256color'
alias .=source

# enable {a-z}, {0-9} in zsh
setopt braceccl

# keymap {{{
# disable terminal flow control <C-s> and <C-q>, save two prefix for vim
stty stop ''
stty start ''
stty -ixon
stty -ixoff

# man zshzle
bindkey -N mymap emacs

bindkey -M mymap ''  backward-kill-line
bindkey -M mymap ''  push-line
bindkey -M mymap ''  get-line #be consistent with ^Q (push-line)
bindkey -M mymap ''  vi-swap-case
bindkey -M mymap '' kill-whole-line
bindkey -M mymap '' kill-whole-line

bindkey -M mymap 'p'  up-line-or-search
bindkey -M mymap 'n'  down-line-or-search
bindkey -M mymap 'k'  history-beginning-search-backward
bindkey -M mymap 'j'  history-beginning-search-forward

# emacs M-bmy M-f will jump over punctuation. so we use the vi-style here
bindkey -M mymap 'b'  vi-backward-word
bindkey -M mymap 'f'  vi-forward-word
bindkey -M mymap '' vi-backward-blank-word
bindkey -M mymap '' vi-forward-blank-word

bindkey -M mymap -s 't' 'ODOD'
bindkey -M mymap -s 's' 'qls -lh'
bindkey -M mymap -s 'a' 'tmux attach -t $USER || tmux new-session -s $USER'

bindkey -A mymap main
# }}}

# prompt {{{
# disable auto correction of zsh
# unsetopt correct_all

function precmd { # {{{
    local loginsize=${#${(%):-[ %n@%M |  ] }}
    local timesize=${#${(%):-%*}}
    local pwdsize=${#${(%):-%~}}

    if [[ "$loginsize + $timesize + $pwdsize" -gt $COLUMNS ]]; then
        (( PWDLEN=$COLUMNS - $loginsize - $timesize ))
        if [[ $PWDLEN -le 0 ]]; then
            PWDLEN=3
        fi
    fi

    MOTTOS=`mottos $COLUMNS 2>/dev/null`
} # }}}
function setprompt { # {{{
    if [ $terminfo[colors] -eq 256 ]; then
        my_blue="$FG[033]"
        my_cyan="$FG[037]"
        my_green="$FG[064]"
        my_orange="$FG[166]"
    else
        my_blue="$fg[blue]"
        my_cyan="$fg[cyan]"
        my_green="$fg[green]"
        my_orange="$fg[yellow]"
    fi
    PROMPT='
[ $my_cyan%n%{$reset_color%} @ %B$my_cyan%M%{$reset_color%}%b | %$PWDLEN<...<%~%<< ] %*
[ $my_green%B$MOTTOS%b%{$reset_color%} ]
$(git_prompt_info)%(!.#.Â») '

    # git settings
    ZSH_THEME_GIT_PROMPT_PREFIX="$my_blue("
    ZSH_THEME_GIT_PROMPT_CLEAN="%{$reset_color%}"
    ZSH_THEME_GIT_PROMPT_DIRTY="%{$reset_color%} ${my_orange}ä½ æƒ³æ€Žæ¨£%{$reset_color%}"
    ZSH_THEME_GIT_PROMPT_SUFFIX="$my_blue)%{$reset_color%} "
} #}}}

setprompt
# }}}

# dirstack history {{{
DIRSTACKSIZE=9
DIRSTACKFILE=~/.zdirs
if [[ -f $DIRSTACKFILE ]] && [[ $#dirstack -eq 0 ]]; then
    dirstack=( ${(f)"$(< $DIRSTACKFILE)"} )
    [[ -d $dirstack[1] ]] && cd $dirstack[1] && cd $OLDPWD
fi
chpwd() {
    print -l $PWD ${(u)dirstack} >$DIRSTACKFILE
}
# }}}

# vim:fdm=marker
